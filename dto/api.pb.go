// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dto/api.proto

package dto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginType int32

const (
	LoginType_Unknown LoginType = 0
	LoginType_NamePd  LoginType = 1
)

var LoginType_name = map[int32]string{
	0: "Unknown",
	1: "NamePd",
}

var LoginType_value = map[string]int32{
	"Unknown": 0,
	"NamePd":  1,
}

func (x LoginType) String() string {
	return proto.EnumName(LoginType_name, int32(x))
}

func (LoginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_138fcf80b8f9ddce, []int{0}
}

type WelcomeReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WelcomeReq) Reset()         { *m = WelcomeReq{} }
func (m *WelcomeReq) String() string { return proto.CompactTextString(m) }
func (*WelcomeReq) ProtoMessage()    {}
func (*WelcomeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_138fcf80b8f9ddce, []int{0}
}

func (m *WelcomeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WelcomeReq.Unmarshal(m, b)
}
func (m *WelcomeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WelcomeReq.Marshal(b, m, deterministic)
}
func (m *WelcomeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WelcomeReq.Merge(m, src)
}
func (m *WelcomeReq) XXX_Size() int {
	return xxx_messageInfo_WelcomeReq.Size(m)
}
func (m *WelcomeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WelcomeReq.DiscardUnknown(m)
}

var xxx_messageInfo_WelcomeReq proto.InternalMessageInfo

type WelcomeResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WelcomeResp) Reset()         { *m = WelcomeResp{} }
func (m *WelcomeResp) String() string { return proto.CompactTextString(m) }
func (*WelcomeResp) ProtoMessage()    {}
func (*WelcomeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_138fcf80b8f9ddce, []int{1}
}

func (m *WelcomeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WelcomeResp.Unmarshal(m, b)
}
func (m *WelcomeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WelcomeResp.Marshal(b, m, deterministic)
}
func (m *WelcomeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WelcomeResp.Merge(m, src)
}
func (m *WelcomeResp) XXX_Size() int {
	return xxx_messageInfo_WelcomeResp.Size(m)
}
func (m *WelcomeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_WelcomeResp.DiscardUnknown(m)
}

var xxx_messageInfo_WelcomeResp proto.InternalMessageInfo

type LoginReq struct {
	//@inject_tag: form:"login_type"
	LoginType LoginType `protobuf:"varint,1,opt,name=login_type,json=loginType,proto3,enum=dto.LoginType" json:"login_type,omitempty" form:"login_type"`
	//@inject_tag: form:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" form:"name"`
	//@inject_tag: form:"passwd"
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty" form:"passwd"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_138fcf80b8f9ddce, []int{2}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetLoginType() LoginType {
	if m != nil {
		return m.LoginType
	}
	return LoginType_Unknown
}

func (m *LoginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginReq) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type LoginResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResp) Reset()         { *m = LoginResp{} }
func (m *LoginResp) String() string { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()    {}
func (*LoginResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_138fcf80b8f9ddce, []int{3}
}

func (m *LoginResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResp.Unmarshal(m, b)
}
func (m *LoginResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResp.Marshal(b, m, deterministic)
}
func (m *LoginResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResp.Merge(m, src)
}
func (m *LoginResp) XXX_Size() int {
	return xxx_messageInfo_LoginResp.Size(m)
}
func (m *LoginResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResp.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResp proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("dto.LoginType", LoginType_name, LoginType_value)
	proto.RegisterType((*WelcomeReq)(nil), "dto.WelcomeReq")
	proto.RegisterType((*WelcomeResp)(nil), "dto.WelcomeResp")
	proto.RegisterType((*LoginReq)(nil), "dto.LoginReq")
	proto.RegisterType((*LoginResp)(nil), "dto.LoginResp")
}

func init() { proto.RegisterFile("dto/api.proto", fileDescriptor_138fcf80b8f9ddce) }

var fileDescriptor_138fcf80b8f9ddce = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0xbf, 0xb4, 0x1f, 0x69, 0x73, 0x63, 0xdb, 0x78, 0x17, 0x1a, 0x8a, 0x8b, 0x12, 0x5c,
	0x14, 0xc1, 0x04, 0xe3, 0x13, 0xb8, 0x10, 0x37, 0x22, 0x92, 0xfa, 0x67, 0x29, 0x63, 0x73, 0x09,
	0xc1, 0x64, 0xee, 0xb4, 0x33, 0x34, 0x74, 0xeb, 0x2b, 0xf8, 0x68, 0xbe, 0x82, 0x0f, 0x22, 0x9d,
	0x46, 0x8b, 0xae, 0xdc, 0x9d, 0x73, 0xe6, 0xce, 0x6f, 0xee, 0x1c, 0x18, 0xe4, 0x86, 0x13, 0xa1,
	0xca, 0x58, 0x2d, 0xd9, 0x30, 0x76, 0x73, 0xc3, 0xe3, 0xa3, 0x82, 0xb9, 0xa8, 0x68, 0x13, 0x27,
	0x42, 0x4a, 0x36, 0xc2, 0x94, 0x2c, 0xf5, 0x76, 0x24, 0xda, 0x03, 0x78, 0xa4, 0x6a, 0xce, 0x35,
	0x65, 0xb4, 0x88, 0x06, 0xe0, 0x7f, 0x3b, 0xad, 0x22, 0x82, 0xfe, 0x35, 0x17, 0xa5, 0xcc, 0x68,
	0x81, 0xa7, 0x00, 0xd5, 0x46, 0x3f, 0x99, 0xb5, 0xa2, 0xd0, 0x99, 0x38, 0xd3, 0x61, 0x3a, 0x8c,
	0x73, 0xc3, 0xb1, 0x1d, 0xb9, 0x5b, 0x2b, 0xca, 0xbc, 0xea, 0x4b, 0x22, 0xc2, 0x7f, 0x29, 0x6a,
	0x0a, 0x3b, 0x13, 0x67, 0xea, 0x65, 0x56, 0xe3, 0x01, 0xb8, 0x4a, 0x68, 0xdd, 0xe4, 0x61, 0xd7,
	0xa6, 0xad, 0x8b, 0x7c, 0xf0, 0xda, 0x67, 0xb4, 0x3a, 0x39, 0x6e, 0x8d, 0xa5, 0xf8, 0xd0, 0xbb,
	0x97, 0x2f, 0x92, 0x1b, 0x19, 0xfc, 0x43, 0x00, 0xf7, 0x46, 0xd4, 0x74, 0x9b, 0x07, 0x4e, 0x3a,
	0x03, 0xb8, 0x50, 0xe5, 0x8c, 0x96, 0xab, 0x72, 0x4e, 0x78, 0x09, 0xbd, 0x76, 0x6d, 0x1c, 0xd9,
	0x95, 0x76, 0x5f, 0x1a, 0x07, 0x3f, 0x03, 0xad, 0xa2, 0xc3, 0xd7, 0xf7, 0x8f, 0xb7, 0xce, 0x3e,
	0x8e, 0x6c, 0x25, 0xab, 0xb3, 0xa4, 0xd9, 0x1e, 0xa6, 0x0f, 0xe0, 0xef, 0xa0, 0x29, 0x5e, 0x41,
	0xbf, 0xbd, 0x96, 0xfe, 0x05, 0x1b, 0x5a, 0x2c, 0x62, 0xf0, 0x1b, 0xfb, 0xec, 0xda, 0xaa, 0xcf,
	0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x48, 0xe6, 0x6f, 0x9e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiServiceClient interface {
	Welcome(ctx context.Context, in *WelcomeReq, opts ...grpc.CallOption) (*WelcomeResp, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) Welcome(ctx context.Context, in *WelcomeReq, opts ...grpc.CallOption) (*WelcomeResp, error) {
	out := new(WelcomeResp)
	err := c.cc.Invoke(ctx, "/dto.ApiService/Welcome", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
type ApiServiceServer interface {
	Welcome(context.Context, *WelcomeReq) (*WelcomeResp, error)
}

// UnimplementedApiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (*UnimplementedApiServiceServer) Welcome(ctx context.Context, req *WelcomeReq) (*WelcomeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Welcome not implemented")
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_Welcome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WelcomeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).Welcome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dto.ApiService/Welcome",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).Welcome(ctx, req.(*WelcomeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dto.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Welcome",
			Handler:    _ApiService_Welcome_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dto/api.proto",
}

// ApiService2Client is the client API for ApiService2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiService2Client interface {
	Welcome2(ctx context.Context, in *WelcomeReq, opts ...grpc.CallOption) (*WelcomeResp, error)
}

type apiService2Client struct {
	cc *grpc.ClientConn
}

func NewApiService2Client(cc *grpc.ClientConn) ApiService2Client {
	return &apiService2Client{cc}
}

func (c *apiService2Client) Welcome2(ctx context.Context, in *WelcomeReq, opts ...grpc.CallOption) (*WelcomeResp, error) {
	out := new(WelcomeResp)
	err := c.cc.Invoke(ctx, "/dto.ApiService2/Welcome2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiService2Server is the server API for ApiService2 service.
type ApiService2Server interface {
	Welcome2(context.Context, *WelcomeReq) (*WelcomeResp, error)
}

// UnimplementedApiService2Server can be embedded to have forward compatible implementations.
type UnimplementedApiService2Server struct {
}

func (*UnimplementedApiService2Server) Welcome2(ctx context.Context, req *WelcomeReq) (*WelcomeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Welcome2 not implemented")
}

func RegisterApiService2Server(s *grpc.Server, srv ApiService2Server) {
	s.RegisterService(&_ApiService2_serviceDesc, srv)
}

func _ApiService2_Welcome2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WelcomeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiService2Server).Welcome2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dto.ApiService2/Welcome2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiService2Server).Welcome2(ctx, req.(*WelcomeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dto.ApiService2",
	HandlerType: (*ApiService2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Welcome2",
			Handler:    _ApiService2_Welcome2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dto/api.proto",
}
